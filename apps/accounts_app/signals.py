from datetime import timedelta
from django.db.models.signals import post_save, pre_save
from django.dispatch import receiver
from django.utils.timezone import now
from asgiref.sync import async_to_sync

from .models import ApplicationDocument, User, DefaultApplication, UserApplication


@receiver(post_save, sender=User)
def assign_default_applications_to_new_user(sender, instance, created, **kwargs):
    """–î–æ–±–∞–≤–ª—è–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∑–∞—è–≤–∫–∏ —Ç–æ–ª—å–∫–æ –û–î–ò–ù —Ä–∞–∑ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    if created:
        default_apps = DefaultApplication.objects.filter(is_active=True)
        for default_app in default_apps:
            if not UserApplication.objects.filter(
                user=instance, default_application=default_app
            ).exists():
                deadline = now() + timedelta(days=default_app.deadline_days)
                UserApplication.objects.create(
                    user=instance,
                    default_application=default_app,
                    deadline_date=deadline,
                )


@receiver(post_save, sender=DefaultApplication)
def assign_new_default_application_to_users(sender, instance, created, **kwargs):
    """–ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–π –¥–µ—Ñ–æ–ª—Ç–Ω–æ–π –∑–∞—è–≤–∫–∏ –¥–æ–±–∞–≤–ª—è–µ–º –µ–µ –≤—Å–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º"""
    if created:
        users = User.objects.all()
        for user in users:
            if not UserApplication.objects.filter(
                user=user, default_application=instance
            ).exists():
                deadline = now() + timedelta(days=instance.deadline_days)
                UserApplication.objects.create(
                    user=user, default_application=instance, deadline_date=deadline
                )


@receiver(post_save, sender=UserApplication)
def notify_user_on_application_status_change(sender, instance, **kwargs):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –µ—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏ –∏–∑–º–µ–Ω–∏–ª—Å—è"""
    if instance.pk:
        from apps.services_app.telegram_bot import create_user_notification

        try:
            user = instance.user
            application_name = instance.default_application.title

            status_messages = {
                "approved": f"‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ '{application_name}' –æ–¥–æ–±—Ä–µ–Ω–∞!",
                "rejected": f"‚ùå –í–∞—à–∞ –∑–∞—è–≤–∫–∞ '{application_name}' –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.",
                "in_progress": f"üîÑ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ '{application_name}' –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏.",
                "pending": f"‚è≥ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ '{application_name}' –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏.",
            }

            status_description = {
                "approved": f"–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –ø–æ –∑–∞—è–≤–∫–µ '{application_name}'.",
                "rejected": f"–î–æ–∫—É–º–µ–Ω—Ç—ã –æ—Ç–∫–ª–æ–Ω–µ–Ω—ã. –°–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
                "in_progress": f"–û–∂–∏–¥–∞–π—Ç–µ, —Å–∫–æ—Ä–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç –≤–∞—à—É –∑–∞—è–≤–∫—É.",
                "pending": f"–ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞, –Ω–æ –ø–æ–∫–∞ –Ω–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.",
            }

            title = status_messages.get(instance.status, "üì¢ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏")
            body = status_description.get(instance.status, "")

            async_to_sync(create_user_notification)(user, title, body)

        except sender.DoesNotExist:
            pass
